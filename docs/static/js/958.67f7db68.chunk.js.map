{"version":3,"file":"static/js/958.67f7db68.chunk.js","mappings":"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","sources":["auth/components/SocialMediaOptions.jsx","auth/components/ModalWarning.jsx","auth/helpers/mensajesError.js","auth/pages/LoginPage.jsx","auth/pages/RegisterPage.jsx","auth/routes/AuthRoutes.jsx"],"sourcesContent":["import React from 'react'\nimport '../pages/stylesAuth.css'\n\nimport { useDispatch  } from 'react-redux'\nimport { startSocialMediaSingIn } from '../../store/auth'\n\n\nexport const SocialMediaOptions = () => {\n\n\n    const dispatch = useDispatch();\n    const signInWithProvider = ( provider ) =>{\n        dispatch( startSocialMediaSingIn( provider ))\n    }\n  return (\n    <div>\n            <button type=\"button\" \n                    className=\"btn btn-secondary btn-floating mx-1\"\n                    onClick={() =>  signInWithProvider('facebook') }>\n\n              <i className=\"fab fa-facebook-f\"></i>\n            </button>\n\n            <button type=\"button\" \n                    className=\"btn btn-secondary btn-floating mx-1\"\n                    onClick={() =>  signInWithProvider('google') }>\n\n              <i className=\"fab fa-google\"></i>\n            </button>\n\n            <button type=\"button\" \n                    className=\"btn btn-secondary btn-floating mx-1\"\n                    onClick={ () => signInWithProvider('twitter') }>\n              <i className=\"fab fa-twitter\"></i>\n            </button>\n\n            <button type=\"button\" \n                    className=\"btn btn-secondary btn-floating mx-1\"\n                    onClick={ () =>  signInWithProvider('github') }>\n              <i className=\"fab fa-github\"></i>\n            </button>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { logout } from '../../store/auth'\nimport { mensajesError } from '../helpers/mensajesError'\n\n\nimport \"./styles.css\"\n\nexport const ModalWarning = ( { title = \"Error\", errorMessage = \"\"} ) => {\n\n    const [ mostrar, setMostrar] = useState(\"flex\")    \n    const dispatch = useDispatch();\n\n    const errorMensaje = mensajesError( errorMessage );\n\n    const cerrarModal = () =>{\n        setMostrar(\"none\");\n        dispatch( logout({ errorMessage: null }) );\n    }\n\n  return (\n    <>\n        <div className=\"container-modal\" style={{ display: mostrar}}>\n            <div className=\"content-modal\">\n\n                <h2>{ title }</h2>\n                <p>{ errorMensaje }</p>\n\n                    <div className=\"btn-cerrar\">\n                        <label  htmlFor=\"btn-modal\"\n                                onClick={ () => cerrarModal()}>Cerrar</label>\n                    </div>\n            </div>\n            <label htmlFor=\"btn-modal\" className=\"cerrar-modal\"></label>\n        </div>\n    </>\n  )\n}\n","\nexport const mensajesError = ( errorMessage ) =>{\n\n    const mensajeError = errorMessage.split(\"(\")[1].split(\")\")[0];\n\n    switch ( mensajeError ) {\n\n        case \"auth/email-already-exists\": return \"El correo ya esta registrado\"\n        case \"auth/id-token-expired\"    : return \"El token de usuario caduco\"\n        case \"auth/id-token-revoked\"    : return \"El token de usuario se elimino\"\n        case \"auth/internal-error\"      : return \"Error de servidor, contacte al administrador\"\n        case \"auth/invalid-credential\"  : return \"Credenciales invalidas\"\n        case \"auth/invalid-display-name\": return \"El nombre de usuario no debe estar vacio\"\n        case \"auth/invalid-email\"       : return \"Correo electronico invalido\"\n        case \"auth/invalid-password\"    : return \"Contraseña incorrecta\"\n        case \"auth/user-not-found\"      : return \"Usuario no encontrado\"\n        case \"auth/wrong-password\"      : return \"Contraseña incorrecta\"\n        case \"popup-closed-by-user\"     : return \"El usuario cerro el PopUp de autenticacion con externos\"\n        case \"provider-already-linked\"  : return \"Ya hay un usuario relacionado a ese provider\"\n        case \"redirect-cancelled-by-user\": return \"El usuario cancelo la redireccion\"\n        case \"user-cancelled\"           : return \"El usuario cancelo la operacion\"\n        case \"auth/account-exists-with-different-credential\": return \"Ya hay un usuario asociado a esas credenciales\"\n        case \"auth/email-already-in-use\": return \"El correo ya esta registrado\"\n\n        default: return errorMessage;\n    }\n}","import React, { useState } from 'react'\nimport { useForm } from 'react-hook-form'\n\nimport './stylesAuth.css'\n\n\nimport { Link } from 'react-router-dom'\nimport { AuthLayout } from '../layout/AuthLayout'\n\nimport { useDispatch, useSelector  } from 'react-redux'\nimport { startSingInWithEmail } from '../../store/auth'\nimport { SocialMediaOptions } from '../components/SocialMediaOptions'\nimport { ModalWarning } from '../components/ModalWarning'\n\n\nexport const LoginPage = () => {\n\n  const { errorMessage } = useSelector( state => state.auth)\n\n  const { register, handleSubmit, formState: { errors }  } = useForm();\n  const dispatch = useDispatch();\n\n  const onSubmit = ( data ) =>{\n\n    dispatch( startSingInWithEmail( data ));\n  }\n  \n  return (\n\n      <>\n      <AuthLayout>\n        \n        {\n          errorMessage !== null && <ModalWarning title = \"Error al Iniciar Sesión\"  errorMessage = { errorMessage }/>\n        }\n        \n        <form onSubmit={ handleSubmit( onSubmit )}\n              autoComplete = \"off\">\n          \n          <p className='title'>Iniciar Sesión</p>\n          <div className=\"form-outline mb-4\">\n\n\n            <input  type        =\"email\" \n                    id          =\"form2Example1\" \n                    className   =\"form-control\" \n                    placeholder ='Correo electronico'\n                    { ...register('email',\n                    { required: {\n                      value: true,\n                      message: 'El correo es obligatorio'\n                    } })}\n                    />\n              { errors.email?.type === 'required' && <span>{ errors.email?.message }</span>}\n          </div>\n\n          <div className=\"form-outline mb-4\">\n            <input  type        =\"password\" \n                    id          =\"form2Example2\" \n                    className   =\"form-control\" \n                    placeholder ='Contraseña'\n                    { ...register('password',{\n                      required: {\n                        value: true,\n                        message: 'Contraseña es obligatoria'\n                      }\n                    })}\n                    />\n            { errors.password?.type === 'required' && <span>{ errors.password?.message }</span>}\n          </div>\n\n          <button type      =\"submit\" \n                  value     =\"enviar\"\n                  className =\"btn btn-primary btn-block mb-4\">Iniciar sesión</button>\n\n          <div className=\"text-center\">\n\n            <p className='advice'>¿Aún no tienes una cuenta? <Link to=\"/auth/register\">Registrarme</Link></p>\n            \n\n            <SocialMediaOptions/>\n          </div>\n        </form>\n      </AuthLayout>\n      </>\n          \n  )\n}\n","import React, { useState } from 'react'\nimport { AuthLayout } from '../layout/AuthLayout'\nimport { Link } from 'react-router-dom'\n\nimport './stylesAuth.css'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useForm } from 'react-hook-form'\nimport { startCreateUserWithEmail, startSocialMediaSingIn } from '../../store/auth'\nimport { SocialMediaOptions } from '../components/SocialMediaOptions'\nimport { ModalWarning } from '../components/ModalWarning'\n\n\n\nconst emailPattern    = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\nconst passwordPattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{6,}$/;\n;\n\n\nexport const RegisterPage = () => {\n\n  const { errorMessage } = useSelector( state => state.auth)\n\n  const { register, handleSubmit, formState: { errors }, watch  } = useForm();\n\n  // const { status, errorMessage } = useSelector( state => state.auth );\n  const dispatch = useDispatch();\n\n\n  const onSubmit = (data) =>{\n    dispatch( startCreateUserWithEmail( data ) );\n  } \n\n  return (\n\n    <AuthLayout>\n\n      {\n        ( errorMessage !== null ) && <ModalWarning title =\"Error al Registrar usuario\"  errorMessage = { errorMessage }/>\n      }\n\n\n      <form onSubmit={ handleSubmit( onSubmit )}\n            autoComplete = \"off\">\n          \n          <p className='title'>Registrarme</p>\n          <div className=\"form-outline mb-3\">\n            <input  type=\"text\" \n                    id=\"form2Example1\" \n                    className=\"form-control\" \n                    placeholder='Nombre de usuario'\n                    { ...register('displayName', {\n                      required: true\n                    })}\n                    />\n            { errors.displayName?.type === 'required' && <span>El nombre es obligatorio</span>}\n          </div>\n\n          <div className=\"form-outline mb-3\">\n            <input  type=\"email\" \n                    id=\"form2Example1\" \n                    className=\"form-control\" \n                    placeholder='Correo electronico'\n                    { ...register('email', {\n                      required: true,\n                      pattern : {\n                        value   : emailPattern,\n                        message : \"Por favor ingrese una direccion de correo valida\" \n                      }\n                    }) }\n                    />\n              { errors.email?.type === 'required' && <span>El correo es obligatorio</span>  }\n              { errors.email?.type !== 'required' && <span>{ errors.email?.message }</span> }\n          </div>\n\n          <div className=\"form-outline mb-3\">\n            <input  type=\"password\" \n                    id=\"form2Example2\" \n                    className=\"form-control\" \n                    placeholder='Contraseña'\n                    { ...register('password', {\n                      required: true,\n                      pattern : {\n                        value: passwordPattern,\n                        message: \"La contraseña debe tener minimo un numero, una mayuscula y minuscula, 6 caracteres y un simbolo especial (@$!%*?&)\"\n                      }\n                    }) }\n                    />\n                { errors.password?.type === 'required' && <span>La contraseña es obligatorio</span>  }\n                { errors.password?.type !== 'required' && <span>{ errors.password?.message }</span> }     \n          </div> \n\n          <div className=\"form-outline mb-3\">\n            <input  type=\"password\" \n                    id=\"form2Example2\" \n                    className=\"form-control\" \n                    placeholder='Repita la Contraseña'\n                    { ...register( 'passwordConfirm', {\n                      required: true,\n                      validate: value => value === watch( 'password') || \"Las contraseñas no coinciden\"\n                    })}\n                    />\n                    { errors.passwordConfirm?.type === 'required' && <span>Repetir la contraseña es obligatorio</span>  }\n                    { errors.passwordConfirm?.type !== 'required' && <span>{ errors.passwordConfirm?.message }</span>  }\n          </div>\n\n\n\n\n          <button type=\"submit\" \n                  className=\"btn btn-primary btn-block mb-4\">Registrarme</button>\n\n          <div className=\"text-center\">\n\n\n            <p className='advice'>¿Ya tienes una cuenta? <Link to=\"/auth/login\">Iniciar Sesión</Link></p>\n\n            <SocialMediaOptions/>\n          </div>\n\n        </form>\n    </AuthLayout>\n  )\n}\n","import React, { useState } from 'react'\n\n\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport { AuthLoadingSpinner } from '../../ui/components/AuthLoadingSpinner';\nimport { LoginPage, RegisterPage } from '../pages';\n\nconst AuthRoutes = () => {\n  \n  return (\n    <Routes>\n\n        <Route path='/login'    element = { <LoginPage/> }              />\n        <Route path='/register' element = { <RegisterPage/> }           />\n\n        <Route path='/*'        element = { <Navigate to=\"/auth/login\" />}   />\n\n    </Routes>\n  );\n}\n\n\nexport default AuthRoutes;"],"names":["SocialMediaOptions","dispatch","useDispatch","signInWithProvider","provider","startSocialMediaSingIn","type","className","onClick","ModalWarning","title","errorMessage","useState","mostrar","setMostrar","errorMensaje","split","mensajesError","style","display","htmlFor","logout","LoginPage","useSelector","state","auth","useForm","register","handleSubmit","errors","formState","AuthLayout","onSubmit","data","startSingInWithEmail","autoComplete","id","placeholder","required","value","message","email","password","to","emailPattern","passwordPattern","RegisterPage","watch","startCreateUserWithEmail","displayName","pattern","validate","passwordConfirm","path","element"],"sourceRoot":""}